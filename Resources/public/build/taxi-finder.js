!function(t){var e={};function n(o){if(e[o])return e[o].exports;var a=e[o]={i:o,l:!1,exports:{}};return t[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(o,a,function(e){return t[e]}.bind(null,a));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=4)}([function(t,e,n){"use strict";n.d(e,"a",function(){return o});
/*
 * This file is part of con4gis,
 * the gis-kit for Contao CMS.
 *
 * @package    con4gis
 * @version    6
 * @author     con4gis contributors (see "authors.txt")
 * @license    LGPL-3.0-or-later
 * @copyright  KÃ¼stenschmiede GmbH Software & Design
 * @link       https://www.con4gis.org
 */
var o={DUMMY_INPUT:"Enter postal code, city or street...",HEADLINE_DIST:"Distance",HEADLINE_TIME:"Time",HEADLINE_BASE_PRICE:"Base price",HEADLINE_DIST_PRICE:"Price / km",HEADLINE_TIME_PRICE:"Price / min",ERROR_OUT_OF_BOUNDS:"Address is out of bounds",ERROR_FALSE_ADDRESS:"Address not found",ERROR:"Error",START_SEARCH:"Start search",NONE:""}},function(t,e,n){t.exports=function(){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}function e(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function o(t,e,o){return e&&n(t.prototype,e),o&&n(t,o),t}function a(){return(a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t}).apply(this,arguments)}function r(t){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function i(t,e,n){return(i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}()?Reflect.construct:function(t,e,n){var o=[null];o.push.apply(o,e);var a=Function.bind.apply(t,o),r=new a;return n&&s(r,n.prototype),r}).apply(null,arguments)}function l(t,e){return!e||"object"!=typeof e&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t,e,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=r(t)););return t}(t,e);if(o){var a=Object.getOwnPropertyDescriptor(o,e);return a.get?a.get.call(n):a.value}})(t,e,n||t)}var u=function(t){return Object.keys(t).map(function(e){return t[e]})},d=function(t){return Array.prototype.slice.call(t)},m=function(t){console.warn("".concat("SweetAlert2:"," ").concat(t))},w=function(t){console.error("".concat("SweetAlert2:"," ").concat(t))},p=[],f=function(t,e){var n;n='"'.concat(t,'" is deprecated and will be removed in the next major release. Please use "').concat(e,'" instead.'),-1===p.indexOf(n)&&(p.push(n),m(n))},g=function(t){return"function"==typeof t?t():t},h=function(t){return t&&Promise.resolve(t)===t},b=Object.freeze({cancel:"cancel",backdrop:"backdrop",close:"close",esc:"esc",timer:"timer"}),y=function(t){var e={};for(var n in t)e[t[n]]="swal2-"+t[n];return e},v=y(["container","shown","height-auto","iosfix","popup","modal","no-backdrop","toast","toast-shown","toast-column","fade","show","hide","noanimation","close","title","header","content","actions","confirm","cancel","footer","icon","image","input","file","range","select","radio","checkbox","label","textarea","inputerror","validation-message","progress-steps","active-progress-step","progress-step","progress-step-line","loading","styled","top","top-start","top-end","top-left","top-right","center","center-start","center-end","center-left","center-right","bottom","bottom-start","bottom-end","bottom-left","bottom-right","grow-row","grow-column","grow-fullscreen","rtl"]),k=y(["success","warning","info","question","error"]),x={previousBodyPadding:null},C=function(t,e){return t.classList.contains(e)},E=function(t,e,n){d(t.classList).forEach(function(e){-1===u(v).indexOf(e)&&-1===u(k).indexOf(e)&&t.classList.remove(e)}),e&&e[n]&&T(t,e[n])};function S(t,e){if(!e)return null;switch(e){case"select":case"textarea":case"file":return L(t,v[e]);case"checkbox":return t.querySelector(".".concat(v.checkbox," input"));case"radio":return t.querySelector(".".concat(v.radio," input:checked"))||t.querySelector(".".concat(v.radio," input:first-child"));case"range":return t.querySelector(".".concat(v.range," input"));default:return L(t,v.input)}}var B,A=function(t){if(t.focus(),"file"!==t.type){var e=t.value;t.value="",t.value=e}},P=function(t,e,n){t&&e&&("string"==typeof e&&(e=e.split(/\s+/).filter(Boolean)),e.forEach(function(e){t.forEach?t.forEach(function(t){n?t.classList.add(e):t.classList.remove(e)}):n?t.classList.add(e):t.classList.remove(e)}))},T=function(t,e){P(t,e,!0)},O=function(t,e){P(t,e,!1)},L=function(t,e){for(var n=0;n<t.childNodes.length;n++)if(C(t.childNodes[n],e))return t.childNodes[n]},I=function(t,e,n){n||0===parseInt(n)?t.style[e]="number"==typeof n?n+"px":n:t.style.removeProperty(e)},R=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"flex";t.style.opacity="",t.style.display=e},_=function(t){t.style.opacity="",t.style.display="none"},M=function(t,e,n){e?R(t,n):_(t)},j=function(t){return!(!t||!(t.offsetWidth||t.offsetHeight||t.getClientRects().length))},D=function(t){var e=window.getComputedStyle(t),n=parseFloat(e.getPropertyValue("animation-duration")||"0"),o=parseFloat(e.getPropertyValue("transition-duration")||"0");return n>0||o>0},z=function(){return document.body.querySelector("."+v.container)},H=function(t){var e=z();return e?e.querySelector(t):null},N=function(t){return H("."+t)},q=function(){return N(v.popup)},V=function(){var t=q();return d(t.querySelectorAll("."+v.icon))},U=function(){var t=V().filter(function(t){return j(t)});return t.length?t[0]:null},Y=function(){return N(v.title)},F=function(){return N(v.content)},Z=function(){return N(v.image)},X=function(){return N(v["progress-steps"])},$=function(){return N(v["validation-message"])},W=function(){return H("."+v.actions+" ."+v.confirm)},K=function(){return H("."+v.actions+" ."+v.cancel)},Q=function(){return N(v.actions)},G=function(){return N(v.header)},J=function(){return N(v.footer)},tt=function(){return N(v.close)},et=function(){var t=d(q().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort(function(t,e){return t=parseInt(t.getAttribute("tabindex")),e=parseInt(e.getAttribute("tabindex")),t>e?1:t<e?-1:0}),e=d(q().querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable], audio[controls], video[controls]')).filter(function(t){return"-1"!==t.getAttribute("tabindex")});return function(t){for(var e=[],n=0;n<t.length;n++)-1===e.indexOf(t[n])&&e.push(t[n]);return e}(t.concat(e)).filter(function(t){return j(t)})},nt=function(){return!ot()&&!document.body.classList.contains(v["no-backdrop"])},ot=function(){return document.body.classList.contains(v["toast-shown"])},at=function(){return"undefined"==typeof window||"undefined"==typeof document},rt='\n <div aria-labelledby="'.concat(v.title,'" aria-describedby="').concat(v.content,'" class="').concat(v.popup,'" tabindex="-1">\n   <div class="').concat(v.header,'">\n     <ul class="').concat(v["progress-steps"],'"></ul>\n     <div class="').concat(v.icon," ").concat(k.error,'">\n       <span class="swal2-x-mark"><span class="swal2-x-mark-line-left"></span><span class="swal2-x-mark-line-right"></span></span>\n     </div>\n     <div class="').concat(v.icon," ").concat(k.question,'"></div>\n     <div class="').concat(v.icon," ").concat(k.warning,'"></div>\n     <div class="').concat(v.icon," ").concat(k.info,'"></div>\n     <div class="').concat(v.icon," ").concat(k.success,'">\n       <div class="swal2-success-circular-line-left"></div>\n       <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n       <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n       <div class="swal2-success-circular-line-right"></div>\n     </div>\n     <img class="').concat(v.image,'" />\n     <h2 class="').concat(v.title,'" id="').concat(v.title,'"></h2>\n     <button type="button" class="').concat(v.close,'">&times;</button>\n   </div>\n   <div class="').concat(v.content,'">\n     <div id="').concat(v.content,'"></div>\n     <input class="').concat(v.input,'" />\n     <input type="file" class="').concat(v.file,'" />\n     <div class="').concat(v.range,'">\n       <input type="range" />\n       <output></output>\n     </div>\n     <select class="').concat(v.select,'"></select>\n     <div class="').concat(v.radio,'"></div>\n     <label for="').concat(v.checkbox,'" class="').concat(v.checkbox,'">\n       <input type="checkbox" />\n       <span class="').concat(v.label,'"></span>\n     </label>\n     <textarea class="').concat(v.textarea,'"></textarea>\n     <div class="').concat(v["validation-message"],'" id="').concat(v["validation-message"],'"></div>\n   </div>\n   <div class="').concat(v.actions,'">\n     <button type="button" class="').concat(v.confirm,'">OK</button>\n     <button type="button" class="').concat(v.cancel,'">Cancel</button>\n   </div>\n   <div class="').concat(v.footer,'">\n   </div>\n </div>\n').replace(/(^|\n)\s*/g,""),st=function(t){pe.isVisible()&&B!==t.target.value&&pe.resetValidationMessage(),B=t.target.value},it=function(t){if((m=z())&&(m.parentNode.removeChild(m),O([document.documentElement,document.body],[v["no-backdrop"],v["toast-shown"],v["has-column"]])),at())w("SweetAlert2 requires document to initialize");else{var e=document.createElement("div");e.className=v.container,e.innerHTML=rt;var n,o,a,r,s,i,l,c,u,d="string"==typeof(n=t.target)?document.querySelector(n):n;d.appendChild(e),function(t){var e=q();e.setAttribute("role",t.toast?"alert":"dialog"),e.setAttribute("aria-live",t.toast?"polite":"assertive"),t.toast||e.setAttribute("aria-modal","true")}(t),function(t){"rtl"===window.getComputedStyle(t).direction&&T(z(),v.rtl)}(d),o=F(),a=L(o,v.input),r=L(o,v.file),s=o.querySelector(".".concat(v.range," input")),i=o.querySelector(".".concat(v.range," output")),l=L(o,v.select),c=o.querySelector(".".concat(v.checkbox," input")),u=L(o,v.textarea),a.oninput=st,r.onchange=st,l.onchange=st,c.onchange=st,u.oninput=st,s.oninput=function(t){st(t),i.value=s.value},s.onchange=function(t){st(t),s.nextSibling.value=s.value}}var m},lt=function(e,n){e instanceof HTMLElement?n.appendChild(e):"object"===t(e)?ct(n,e):e&&(n.innerHTML=e)},ct=function(t,e){if(t.innerHTML="",0 in e)for(var n=0;n in e;n++)t.appendChild(e[n].cloneNode(!0));else t.appendChild(e.cloneNode(!0))},ut=function(){if(at())return!1;var t=document.createElement("div"),e={WebkitAnimation:"webkitAnimationEnd",OAnimation:"oAnimationEnd oanimationend",animation:"animationend"};for(var n in e)if(e.hasOwnProperty(n)&&void 0!==t.style[n])return e[n];return!1}();function dt(t,e,n){M(t,n["showC"+e.substring(1)+"Button"],"inline-block"),t.innerHTML=n[e+"ButtonText"],t.setAttribute("aria-label",n[e+"ButtonAriaLabel"]),t.className=v[e],E(t,n.customClass,e+"Button"),T(t,n[e+"ButtonClass"])}var mt=function(t,e){var n=Q(),o=W(),a=K();e.showConfirmButton||e.showCancelButton?R(n):_(n),E(n,e.customClass,"actions"),dt(o,"confirm",e),dt(a,"cancel",e),e.buttonsStyling?function(t,e,n){T([t,e],v.styled),n.confirmButtonColor&&(t.style.backgroundColor=n.confirmButtonColor),n.cancelButtonColor&&(e.style.backgroundColor=n.cancelButtonColor);var o=window.getComputedStyle(t).getPropertyValue("background-color");t.style.borderLeftColor=o,t.style.borderRightColor=o}(o,a,e):(O([o,a],v.styled),o.style.backgroundColor=o.style.borderLeftColor=o.style.borderRightColor="",a.style.backgroundColor=a.style.borderLeftColor=a.style.borderRightColor="")},wt=function(t,e){var n=z();n&&(function(t,e){"string"==typeof e?t.style.background=e:e||T([document.documentElement,document.body],v["no-backdrop"])}(n,e.backdrop),!e.backdrop&&e.allowOutsideClick&&m('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'),function(t,e){e in v?T(t,v[e]):(m('The "position" parameter is not valid, defaulting to "center"'),T(t,v.center))}(n,e.position),function(t,e){if(e&&"string"==typeof e){var n="grow-"+e;n in v&&T(t,v[n])}}(n,e.grow),E(n,e.customClass,"container"),e.customContainerClass&&T(n,e.customContainerClass))},pt={promise:new WeakMap,innerParams:new WeakMap,domCache:new WeakMap},ft=function(t,e){var n=S(F(),t);if(n)for(var o in function(t){for(var e=0;e<t.attributes.length;e++){var n=t.attributes[e].name;-1===["type","value","style"].indexOf(n)&&t.removeAttribute(n)}}(n),e)"range"===t&&"placeholder"===o||n.setAttribute(o,e[o])},gt=function(t,e,n){t.className=e,n.inputClass&&T(t,n.inputClass),n.customClass&&T(t,n.customClass.input)},ht=function(t,e){t.placeholder&&!e.inputPlaceholder||(t.placeholder=e.inputPlaceholder)},bt={};bt.text=bt.email=bt.password=bt.number=bt.tel=bt.url=function(e){var n=L(F(),v.input);return"string"==typeof e.inputValue||"number"==typeof e.inputValue?n.value=e.inputValue:h(e.inputValue)||m('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(t(e.inputValue),'"')),ht(n,e),n.type=e.input,n},bt.file=function(t){var e=L(F(),v.file);return ht(e,t),e.type=t.input,e},bt.range=function(t){var e=L(F(),v.range),n=e.querySelector("input"),o=e.querySelector("output");return n.value=t.inputValue,n.type=t.input,o.value=t.inputValue,e},bt.select=function(t){var e=L(F(),v.select);if(e.innerHTML="",t.inputPlaceholder){var n=document.createElement("option");n.innerHTML=t.inputPlaceholder,n.value="",n.disabled=!0,n.selected=!0,e.appendChild(n)}return e},bt.radio=function(){var t=L(F(),v.radio);return t.innerHTML="",t},bt.checkbox=function(t){var e=L(F(),v.checkbox),n=S(F(),"checkbox");n.type="checkbox",n.value=1,n.id=v.checkbox,n.checked=Boolean(t.inputValue);var o=e.querySelector("span");return o.innerHTML=t.inputPlaceholder,e},bt.textarea=function(t){var e=L(F(),v.textarea);return e.value=t.inputValue,ht(e,t),e};var yt=function(t,e){var n=F().querySelector("#"+v.content);e.html?(lt(e.html,n),R(n,"block")):e.text?(n.textContent=e.text,R(n,"block")):_(n),function(t,e){for(var n=pt.innerParams.get(t),o=!n||e.input!==n.input,a=F(),r=["input","file","range","select","radio","checkbox","textarea"],s=0;s<r.length;s++){var i=v[r[s]],l=L(a,i);ft(r[s],e.inputAttributes),gt(l,i,e),o&&_(l)}if(e.input){if(!bt[e.input])return w('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(e.input,'"'));if(o){var c=bt[e.input](e);R(c)}}}(t,e),E(F(),e.customClass,"content")},vt=function(){for(var t=V(),e=0;e<t.length;e++)_(t[e])},kt=function(){for(var t=q(),e=window.getComputedStyle(t).getPropertyValue("background-color"),n=t.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix"),o=0;o<n.length;o++)n[o].style.backgroundColor=e},xt=function(t,e){var n=X();if(!e.progressSteps||0===e.progressSteps.length)return _(n);R(n),n.innerHTML="";var o=parseInt(null===e.currentProgressStep?pe.getQueueStep():e.currentProgressStep);o>=e.progressSteps.length&&m("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"),e.progressSteps.forEach(function(t,a){var r=function(t){var e=document.createElement("li");return T(e,v["progress-step"]),e.innerHTML=t,e}(t);if(n.appendChild(r),a===o&&T(r,v["active-progress-step"]),a!==e.progressSteps.length-1){var s=function(t){var e=document.createElement("li");return T(e,v["progress-step-line"]),t.progressStepsDistance&&(e.style.width=t.progressStepsDistance),e}(t);n.appendChild(s)}})},Ct=function(t,e){var n=G();E(n,e.customClass,"header"),xt(t,e),function(t,e){var n=pt.innerParams.get(t);if(n&&e.type===n.type&&U())E(U(),e.customClass,"icon");else if(vt(),e.type)if(kt(),-1!==Object.keys(k).indexOf(e.type)){var o=H(".".concat(v.icon,".").concat(k[e.type]));R(o),E(o,e.customClass,"icon"),P(o,"swal2-animate-".concat(e.type,"-icon"),e.animation)}else w('Unknown type! Expected "success", "error", "warning", "info" or "question", got "'.concat(e.type,'"'))}(t,e),function(t,e){var n=Z();if(!e.imageUrl)return _(n);R(n),n.setAttribute("src",e.imageUrl),n.setAttribute("alt",e.imageAlt),I(n,"width",e.imageWidth),I(n,"height",e.imageHeight),n.className=v.image,E(n,e.customClass,"image"),e.imageClass&&T(n,e.imageClass)}(0,e),function(t,e){var n=Y();M(n,e.title||e.titleText),e.title&&lt(e.title,n),e.titleText&&(n.innerText=e.titleText),E(n,e.customClass,"title")}(0,e),function(t,e){var n=tt();E(n,e.customClass,"closeButton"),M(n,e.showCloseButton),n.setAttribute("aria-label",e.closeButtonAriaLabel)}(0,e)},Et=function(t,e){!function(t,e){var n=q();I(n,"width",e.width),I(n,"padding",e.padding),e.background&&(n.style.background=e.background),n.className=v.popup,e.toast?(T([document.documentElement,document.body],v["toast-shown"]),T(n,v.toast)):T(n,v.modal),E(n,e.customClass,"popup"),"string"==typeof e.customClass&&T(n,e.customClass),P(n,v.noanimation,!e.animation)}(0,e),wt(0,e),Ct(t,e),yt(t,e),mt(0,e),function(t,e){var n=J();M(n,e.footer),e.footer&&lt(e.footer,n),E(n,e.customClass,"footer")}(0,e)},St=[],Bt=function(){var t=q();t||pe.fire(""),t=q();var e=Q(),n=W(),o=K();R(e),R(n),T([t,e],v.loading),n.disabled=!0,o.disabled=!0,t.setAttribute("data-loading",!0),t.setAttribute("aria-busy",!0),t.focus()},At={},Pt=function(){return new Promise(function(t){var e=window.scrollX,n=window.scrollY;At.restoreFocusTimeout=setTimeout(function(){At.previousActiveElement&&At.previousActiveElement.focus?(At.previousActiveElement.focus(),At.previousActiveElement=null):document.body&&document.body.focus(),t()},100),void 0!==e&&void 0!==n&&window.scrollTo(e,n)})},Tt={title:"",titleText:"",text:"",html:"",footer:"",type:null,toast:!1,customClass:"",customContainerClass:"",target:"body",backdrop:!0,animation:!0,heightAuto:!0,allowOutsideClick:!0,allowEscapeKey:!0,allowEnterKey:!0,stopKeydownPropagation:!0,keydownListenerCapture:!1,showConfirmButton:!0,showCancelButton:!1,preConfirm:null,confirmButtonText:"OK",confirmButtonAriaLabel:"",confirmButtonColor:null,confirmButtonClass:"",cancelButtonText:"Cancel",cancelButtonAriaLabel:"",cancelButtonColor:null,cancelButtonClass:"",buttonsStyling:!0,reverseButtons:!1,focusConfirm:!0,focusCancel:!1,showCloseButton:!1,closeButtonAriaLabel:"Close this dialog",showLoaderOnConfirm:!1,imageUrl:null,imageWidth:null,imageHeight:null,imageAlt:"",imageClass:"",timer:null,width:null,padding:null,background:null,input:null,inputPlaceholder:"",inputValue:"",inputOptions:{},inputAutoTrim:!0,inputClass:"",inputAttributes:{},inputValidator:null,validationMessage:null,grow:!1,position:"center",progressSteps:[],currentProgressStep:null,progressStepsDistance:null,onBeforeOpen:null,onAfterClose:null,onOpen:null,onClose:null,scrollbarPadding:!0},Ot=["title","titleText","text","html","type","customClass","showConfirmButton","showCancelButton","confirmButtonText","confirmButtonAriaLabel","confirmButtonColor","confirmButtonClass","cancelButtonText","cancelButtonAriaLabel","cancelButtonColor","cancelButtonClass","buttonsStyling","reverseButtons","imageUrl","imageWidth","imageHeigth","imageAlt","imageClass","progressSteps","currentProgressStep"],Lt={customContainerClass:"customClass",confirmButtonClass:"customClass",cancelButtonClass:"customClass",imageClass:"customClass",inputClass:"customClass"},It=["allowOutsideClick","allowEnterKey","backdrop","focusConfirm","focusCancel","heightAuto","keydownListenerCapture"],Rt=function(t){return Tt.hasOwnProperty(t)},_t=function(t){return Lt[t]},Mt=function(t){Rt(t)||m('Unknown parameter "'.concat(t,'"'))},jt=function(t){-1!==It.indexOf(t)&&m('The parameter "'.concat(t,'" is incompatible with toasts'))},Dt=function(t){_t(t)&&f(t,_t(t))},zt=function(t){for(var e in t)Mt(e),t.toast&&jt(e),Dt()},Ht=Object.freeze({isValidParameter:Rt,isUpdatableParameter:function(t){return-1!==Ot.indexOf(t)},isDeprecatedParameter:_t,argsToParams:function(e){var n={};switch(t(e[0])){case"object":a(n,e[0]);break;default:["title","html","type"].forEach(function(o,a){switch(t(e[a])){case"string":n[o]=e[a];break;case"undefined":break;default:w("Unexpected type of ".concat(o,'! Expected "string", got ').concat(t(e[a])))}})}return n},isVisible:function(){return j(q())},clickConfirm:function(){return W()&&W().click()},clickCancel:function(){return K()&&K().click()},getContainer:z,getPopup:q,getTitle:Y,getContent:F,getImage:Z,getIcon:U,getIcons:V,getCloseButton:tt,getActions:Q,getConfirmButton:W,getCancelButton:K,getHeader:G,getFooter:J,getFocusableElements:et,getValidationMessage:$,isLoading:function(){return q().hasAttribute("data-loading")},fire:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return i(this,e)},mixin:function(t){return function(n){function i(){return e(this,i),l(this,r(i).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(i,n),o(i,[{key:"_main",value:function(e){return c(r(i.prototype),"_main",this).call(this,a({},t,e))}}]),i}(this)},queue:function(t){var e=this;St=t;var n=function(t,e){St=[],document.body.removeAttribute("data-swal2-queue-step"),t(e)},o=[];return new Promise(function(t){!function a(r,s){r<St.length?(document.body.setAttribute("data-swal2-queue-step",r),e.fire(St[r]).then(function(e){void 0!==e.value?(o.push(e.value),a(r+1,s)):n(t,{dismiss:e.dismiss})})):n(t,{value:o})}(0)})},getQueueStep:function(){return document.body.getAttribute("data-swal2-queue-step")},insertQueueStep:function(t,e){return e&&e<St.length?St.splice(e,0,t):St.push(t)},deleteQueueStep:function(t){void 0!==St[t]&&St.splice(t,1)},showLoading:Bt,enableLoading:Bt,getTimerLeft:function(){return At.timeout&&At.timeout.getTimerLeft()},stopTimer:function(){return At.timeout&&At.timeout.stop()},resumeTimer:function(){return At.timeout&&At.timeout.start()},toggleTimer:function(){var t=At.timeout;return t&&(t.running?t.stop():t.start())},increaseTimer:function(t){return At.timeout&&At.timeout.increase(t)},isTimerRunning:function(){return At.timeout&&At.timeout.isRunning()}});function Nt(){var t=pt.innerParams.get(this),e=pt.domCache.get(this);t.showConfirmButton||(_(e.confirmButton),t.showCancelButton||_(e.actions)),O([e.popup,e.actions],v.loading),e.popup.removeAttribute("aria-busy"),e.popup.removeAttribute("data-loading"),e.confirmButton.disabled=!1,e.cancelButton.disabled=!1}var qt=function(){null===x.previousBodyPadding&&document.body.scrollHeight>window.innerHeight&&(x.previousBodyPadding=parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")),document.body.style.paddingRight=x.previousBodyPadding+function(){if("ontouchstart"in window||navigator.msMaxTouchPoints)return 0;var t=document.createElement("div");t.style.width="50px",t.style.height="50px",t.style.overflow="scroll",document.body.appendChild(t);var e=t.offsetWidth-t.clientWidth;return document.body.removeChild(t),e}()+"px")},Vt=function(){null!==x.previousBodyPadding&&(document.body.style.paddingRight=x.previousBodyPadding+"px",x.previousBodyPadding=null)},Ut=function(){var t,e=z();e.ontouchstart=function(n){var o;t=n.target===e||!((o=e).scrollHeight>o.clientHeight)&&"INPUT"!==n.target.tagName},e.ontouchmove=function(e){t&&(e.preventDefault(),e.stopPropagation())}},Yt=function(){if(C(document.body,v.iosfix)){var t=parseInt(document.body.style.top,10);O(document.body,v.iosfix),document.body.style.top="",document.body.scrollTop=-1*t}},Ft=function(){return!!window.MSInputMethodContext&&!!document.documentMode},Zt=function(){var t=z(),e=q();t.style.removeProperty("align-items"),e.offsetTop<0&&(t.style.alignItems="flex-start")},Xt=function(){"undefined"!=typeof window&&Ft()&&window.removeEventListener("resize",Zt)},$t=function(){var t=d(document.body.children);t.forEach(function(t){t.hasAttribute("data-previous-aria-hidden")?(t.setAttribute("aria-hidden",t.getAttribute("data-previous-aria-hidden")),t.removeAttribute("data-previous-aria-hidden")):t.removeAttribute("aria-hidden")})},Wt={swalPromiseResolve:new WeakMap};function Kt(t,e,n){e?Jt(n):(Pt().then(function(){return Jt(n)}),At.keydownTarget.removeEventListener("keydown",At.keydownHandler,{capture:At.keydownListenerCapture}),At.keydownHandlerAdded=!1),delete At.keydownHandler,delete At.keydownTarget,t.parentNode&&t.parentNode.removeChild(t),O([document.documentElement,document.body],[v.shown,v["height-auto"],v["no-backdrop"],v["toast-shown"],v["toast-column"]]),nt()&&(Vt(),Yt(),Xt(),$t())}function Qt(t){var e=z(),n=q();if(n&&!C(n,v.hide)){var o=pt.innerParams.get(this),a=Wt.swalPromiseResolve.get(this),r=o.onClose,s=o.onAfterClose;O(n,v.show),T(n,v.hide),ut&&D(n)?n.addEventListener(ut,function(t){t.target===n&&function(t,e,n,o){C(t,v.hide)&&Kt(e,n,o),Gt(pt),Gt(Wt)}(n,e,ot(),s)}):Kt(e,ot(),s),null!==r&&"function"==typeof r&&r(n),a(t||{}),delete this.params}}var Gt=function(t){for(var e in t)t[e]=new WeakMap},Jt=function(t){null!==t&&"function"==typeof t&&setTimeout(function(){t()})};function te(t,e,n){var o=pt.domCache.get(t);e.forEach(function(t){o[t].disabled=n})}function ee(t,e){if(!t)return!1;if("radio"===t.type)for(var n=t.parentNode.parentNode,o=n.querySelectorAll("input"),a=0;a<o.length;a++)o[a].disabled=e;else t.disabled=e}var ne=function(){function t(n,o){e(this,t),this.callback=n,this.remaining=o,this.running=!1,this.start()}return o(t,[{key:"start",value:function(){return this.running||(this.running=!0,this.started=new Date,this.id=setTimeout(this.callback,this.remaining)),this.remaining}},{key:"stop",value:function(){return this.running&&(this.running=!1,clearTimeout(this.id),this.remaining-=new Date-this.started),this.remaining}},{key:"increase",value:function(t){var e=this.running;return e&&this.stop(),this.remaining+=t,e&&this.start(),this.remaining}},{key:"getTimerLeft",value:function(){return this.running&&(this.stop(),this.start()),this.remaining}},{key:"isRunning",value:function(){return this.running}}]),t}(),oe={email:function(t,e){return/^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(t)?Promise.resolve():Promise.resolve(e||"Invalid email address")},url:function(t,e){return/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&\/=]*)$/.test(t)?Promise.resolve():Promise.resolve(e||"Invalid URL")}};function ae(t,e){t.removeEventListener(ut,ae),e.style.overflowY="auto"}var re,se=function(t){var e=z(),n=q();null!==t.onBeforeOpen&&"function"==typeof t.onBeforeOpen&&t.onBeforeOpen(n),t.animation&&(T(n,v.show),T(e,v.fade)),R(n),ut&&D(n)?(e.style.overflowY="hidden",n.addEventListener(ut,ae.bind(null,n,e))):e.style.overflowY="auto",T([document.documentElement,document.body,e],v.shown),t.heightAuto&&t.backdrop&&!t.toast&&T([document.documentElement,document.body],v["height-auto"]),nt()&&(t.scrollbarPadding&&qt(),function(){if(/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream&&!C(document.body,v.iosfix)){var t=document.body.scrollTop;document.body.style.top=-1*t+"px",T(document.body,v.iosfix),Ut()}}(),"undefined"!=typeof window&&Ft()&&(Zt(),window.addEventListener("resize",Zt)),d(document.body.children).forEach(function(t){t===z()||function(t,e){if("function"==typeof t.contains)return t.contains(e)}(t,z())||(t.hasAttribute("aria-hidden")&&t.setAttribute("data-previous-aria-hidden",t.getAttribute("aria-hidden")),t.setAttribute("aria-hidden","true"))}),setTimeout(function(){e.scrollTop=0})),ot()||At.previousActiveElement||(At.previousActiveElement=document.activeElement),null!==t.onOpen&&"function"==typeof t.onOpen&&setTimeout(function(){t.onOpen(n)})},ie=void 0,le=function(e,n){var o=F(),a=function(t){return ue[n.input](o,de(t),n)};h(n.inputOptions)?(Bt(),n.inputOptions.then(function(t){e.hideLoading(),a(t)})):"object"===t(n.inputOptions)?a(n.inputOptions):w("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(t(n.inputOptions)))},ce=function(t,e){var n=t.getInput();_(n),e.inputValue.then(function(o){n.value="number"===e.input?parseFloat(o)||0:o+"",R(n),n.focus(),t.hideLoading()}).catch(function(t){w("Error in inputValue promise: "+t),n.value="",R(n),n.focus(),ie.hideLoading()})},ue={select:function(t,e,n){var o=L(t,v.select);e.forEach(function(t){var e=t[0],a=t[1],r=document.createElement("option");r.value=e,r.innerHTML=a,n.inputValue.toString()===e.toString()&&(r.selected=!0),o.appendChild(r)}),o.focus()},radio:function(t,e,n){var o=L(t,v.radio);e.forEach(function(t){var e=t[0],a=t[1],r=document.createElement("input"),s=document.createElement("label");r.type="radio",r.name=v.radio,r.value=e,n.inputValue.toString()===e.toString()&&(r.checked=!0);var i=document.createElement("span");i.innerHTML=a,i.className=v.label,s.appendChild(r),s.appendChild(i),o.appendChild(s)});var a=o.querySelectorAll("input");a.length&&a[0].focus()}},de=function(t){var e=[];return"undefined"!=typeof Map&&t instanceof Map?t.forEach(function(t,n){e.push([n,t])}):Object.keys(t).forEach(function(n){e.push([n,t[n]])}),e},me=Object.freeze({hideLoading:Nt,disableLoading:Nt,getInput:function(t){var e=pt.innerParams.get(t||this);return S(pt.domCache.get(t||this).content,e.input)},close:Qt,closePopup:Qt,closeModal:Qt,closeToast:Qt,enableButtons:function(){te(this,["confirmButton","cancelButton"],!1)},disableButtons:function(){te(this,["confirmButton","cancelButton"],!0)},enableConfirmButton:function(){f("Swal.disableConfirmButton()","Swal.getConfirmButton().removeAttribute('disabled')"),te(this,["confirmButton"],!1)},disableConfirmButton:function(){f("Swal.enableConfirmButton()","Swal.getConfirmButton().setAttribute('disabled', '')"),te(this,["confirmButton"],!0)},enableInput:function(){return ee(this.getInput(),!1)},disableInput:function(){return ee(this.getInput(),!0)},showValidationMessage:function(t){var e=pt.domCache.get(this);e.validationMessage.innerHTML=t;var n=window.getComputedStyle(e.popup);e.validationMessage.style.marginLeft="-".concat(n.getPropertyValue("padding-left")),e.validationMessage.style.marginRight="-".concat(n.getPropertyValue("padding-right")),R(e.validationMessage);var o=this.getInput();o&&(o.setAttribute("aria-invalid",!0),o.setAttribute("aria-describedBy",v["validation-message"]),A(o),T(o,v.inputerror))},resetValidationMessage:function(){var t=pt.domCache.get(this);t.validationMessage&&_(t.validationMessage);var e=this.getInput();e&&(e.removeAttribute("aria-invalid"),e.removeAttribute("aria-describedBy"),O(e,v.inputerror))},getProgressSteps:function(){return f("Swal.getProgressSteps()","const swalInstance = Swal.fire({progressSteps: ['1', '2', '3']}); const progressSteps = swalInstance.params.progressSteps"),pt.innerParams.get(this).progressSteps},setProgressSteps:function(t){f("Swal.setProgressSteps()","Swal.update()");var e=a({},pt.innerParams.get(this),{progressSteps:t});xt(this,e),pt.innerParams.set(this,e)},showProgressSteps:function(){var t=pt.domCache.get(this);R(t.progressSteps)},hideProgressSteps:function(){var t=pt.domCache.get(this);_(t.progressSteps)},_main:function(t){var e=this;zt(t);var n=a({},Tt,t);(function(t){t.inputValidator||Object.keys(oe).forEach(function(e){t.input===e&&(t.inputValidator=oe[e])}),t.showLoaderOnConfirm&&!t.preConfirm&&m("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"),t.animation=g(t.animation),(!t.target||"string"==typeof t.target&&!document.querySelector(t.target)||"string"!=typeof t.target&&!t.target.appendChild)&&(m('Target parameter is not valid, defaulting to "body"'),t.target="body"),"string"==typeof t.title&&(t.title=t.title.split("\n").join("<br />"));var e=q(),n="string"==typeof t.target?document.querySelector(t.target):t.target;(!e||e&&n&&e.parentNode!==n.parentNode)&&it(t)})(n),Object.freeze(n),At.timeout&&(At.timeout.stop(),delete At.timeout),clearTimeout(At.restoreFocusTimeout);var o={popup:q(),container:z(),content:F(),actions:Q(),confirmButton:W(),cancelButton:K(),closeButton:tt(),validationMessage:$(),progressSteps:X()};pt.domCache.set(this,o),Et(this,n),pt.innerParams.set(this,n);var r=this.constructor;return new Promise(function(t){var a=function(t){e.closePopup({value:t})},s=function(t){e.closePopup({dismiss:t})};Wt.swalPromiseResolve.set(e,t),n.timer&&(At.timeout=new ne(function(){s("timer"),delete At.timeout},n.timer)),n.input&&setTimeout(function(){var t=e.getInput();t&&A(t)},0);for(var i=function(t){if(n.showLoaderOnConfirm&&r.showLoading(),n.preConfirm){e.resetValidationMessage();var s=Promise.resolve().then(function(){return n.preConfirm(t,n.validationMessage)});s.then(function(n){j(o.validationMessage)||!1===n?e.hideLoading():a(void 0===n?t:n)})}else a(t)},l=function(t){var a=t.target,l=o.confirmButton,c=o.cancelButton,u=l&&(l===a||l.contains(a)),d=c&&(c===a||c.contains(a));switch(t.type){case"click":if(u)if(e.disableButtons(),n.input){var m=function(){var t=e.getInput();if(!t)return null;switch(n.input){case"checkbox":return t.checked?1:0;case"radio":return t.checked?t.value:null;case"file":return t.files.length?t.files[0]:null;default:return n.inputAutoTrim?t.value.trim():t.value}}();if(n.inputValidator){e.disableInput();var w=Promise.resolve().then(function(){return n.inputValidator(m,n.validationMessage)});w.then(function(t){e.enableButtons(),e.enableInput(),t?e.showValidationMessage(t):i(m)})}else e.getInput().checkValidity()?i(m):(e.enableButtons(),e.showValidationMessage(n.validationMessage))}else i(!0);else d&&(e.disableButtons(),s(r.DismissReason.cancel))}},c=o.popup.querySelectorAll("button"),u=0;u<c.length;u++)c[u].onclick=l,c[u].onmouseover=l,c[u].onmouseout=l,c[u].onmousedown=l;if(o.closeButton.onclick=function(){s(r.DismissReason.close)},n.toast)o.popup.onclick=function(){n.showConfirmButton||n.showCancelButton||n.showCloseButton||n.input||s(r.DismissReason.close)};else{var d=!1;o.popup.onmousedown=function(){o.container.onmouseup=function(t){o.container.onmouseup=void 0,t.target===o.container&&(d=!0)}},o.container.onmousedown=function(){o.popup.onmouseup=function(t){o.popup.onmouseup=void 0,(t.target===o.popup||o.popup.contains(t.target))&&(d=!0)}},o.container.onclick=function(t){d?d=!1:t.target===o.container&&g(n.allowOutsideClick)&&s(r.DismissReason.backdrop)}}n.reverseButtons?o.confirmButton.parentNode.insertBefore(o.cancelButton,o.confirmButton):o.confirmButton.parentNode.insertBefore(o.confirmButton,o.cancelButton);var m=function(t,e){for(var a=et(n.focusCancel),r=0;r<a.length;r++)return(t+=e)===a.length?t=0:-1===t&&(t=a.length-1),a[t].focus();o.popup.focus()};At.keydownTarget&&At.keydownHandlerAdded&&(At.keydownTarget.removeEventListener("keydown",At.keydownHandler,{capture:At.keydownListenerCapture}),At.keydownHandlerAdded=!1),n.toast||(At.keydownHandler=function(t){return function(t,n){if(n.stopKeydownPropagation&&t.stopPropagation(),"Enter"!==t.key||t.isComposing)if("Tab"===t.key){for(var a=t.target,i=et(n.focusCancel),l=-1,c=0;c<i.length;c++)if(a===i[c]){l=c;break}t.shiftKey?m(l,-1):m(l,1),t.stopPropagation(),t.preventDefault()}else-1!==["ArrowLeft","ArrowRight","ArrowUp","ArrowDown","Left","Right","Up","Down"].indexOf(t.key)?document.activeElement===o.confirmButton&&j(o.cancelButton)?o.cancelButton.focus():document.activeElement===o.cancelButton&&j(o.confirmButton)&&o.confirmButton.focus():"Escape"!==t.key&&"Esc"!==t.key||!0!==g(n.allowEscapeKey)||(t.preventDefault(),s(r.DismissReason.esc));else if(t.target&&e.getInput()&&t.target.outerHTML===e.getInput().outerHTML){if(-1!==["textarea","file"].indexOf(n.input))return;r.clickConfirm(),t.preventDefault()}}(t,n)},At.keydownTarget=n.keydownListenerCapture?window:o.popup,At.keydownListenerCapture=n.keydownListenerCapture,At.keydownTarget.addEventListener("keydown",At.keydownHandler,{capture:At.keydownListenerCapture}),At.keydownHandlerAdded=!0),e.enableButtons(),e.hideLoading(),e.resetValidationMessage(),n.toast&&(n.input||n.footer||n.showCloseButton)?T(document.body,v["toast-column"]):O(document.body,v["toast-column"]),"select"===n.input||"radio"===n.input?le(e,n):-1!==["text","email","number","tel","textarea"].indexOf(n.input)&&h(n.inputValue)&&ce(e,n),se(n),n.toast||(g(n.allowEnterKey)?n.focusCancel&&j(o.cancelButton)?o.cancelButton.focus():n.focusConfirm&&j(o.confirmButton)?o.confirmButton.focus():m(-1,1):document.activeElement&&"function"==typeof document.activeElement.blur&&document.activeElement.blur()),o.container.scrollTop=0})},update:function(t){var e={};Object.keys(t).forEach(function(n){pe.isUpdatableParameter(n)?e[n]=t[n]:m('Invalid parameter to update: "'.concat(n,'". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js'))});var n=a({},pt.innerParams.get(this),e);Et(this,n),pt.innerParams.set(this,n),Object.defineProperties(this,{params:{value:a({},this.params,t),writable:!1,enumerable:!0}})}});function we(){if("undefined"!=typeof window){"undefined"==typeof Promise&&w("This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)"),re=this;for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];var o=Object.freeze(this.constructor.argsToParams(e));Object.defineProperties(this,{params:{value:o,writable:!1,enumerable:!0,configurable:!0}});var a=this._main(this.params);pt.promise.set(this,a)}}we.prototype.then=function(t){var e=pt.promise.get(this);return e.then(t)},we.prototype.finally=function(t){var e=pt.promise.get(this);return e.finally(t)},a(we.prototype,me),a(we,Ht),Object.keys(me).forEach(function(t){we[t]=function(){var e;if(re)return(e=re)[t].apply(e,arguments)}}),we.DismissReason=b,we.version="8.11.7";var pe=we;return pe.default=pe,pe}(),"undefined"!=typeof window&&window.Sweetalert2&&(window.swal=window.sweetAlert=window.Swal=window.SweetAlert=window.Sweetalert2),"undefined"!=typeof document&&function(t,e){var n=t.createElement("style");if(t.getElementsByTagName("head")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=e);else try{n.innerHTML=e}catch(t){n.innerText=e}}(document,'@charset "UTF-8";@-webkit-keyframes swal2-show{0%{-webkit-transform:scale(.7);transform:scale(.7)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes swal2-show{0%{-webkit-transform:scale(.7);transform:scale(.7)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}100%{-webkit-transform:scale(.5);transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}100%{-webkit-transform:scale(.5);transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.875em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.875em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}100%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}100%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}50%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}80%{margin-top:-.375em;-webkit-transform:scale(1.15);transform:scale(1.15)}100%{margin-top:0;-webkit-transform:scale(1);transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}50%{margin-top:1.625em;-webkit-transform:scale(.4);transform:scale(.4);opacity:0}80%{margin-top:-.375em;-webkit-transform:scale(1.15);transform:scale(1.15)}100%{margin-top:0;-webkit-transform:scale(1);transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}100%{-webkit-transform:rotateX(0);transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}100%{-webkit-transform:rotateX(0);transform:rotateX(0);opacity:1}}body.swal2-toast-shown .swal2-container{background-color:transparent}body.swal2-toast-shown .swal2-container.swal2-shown{background-color:transparent}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}body.swal2-toast-column .swal2-toast{flex-direction:column;align-items:stretch}body.swal2-toast-column .swal2-toast .swal2-actions{flex:1;align-self:stretch;height:2.2em;margin-top:.3125em}body.swal2-toast-column .swal2-toast .swal2-loading{justify-content:center}body.swal2-toast-column .swal2-toast .swal2-input{height:2em;margin:.3125em auto;font-size:1em}body.swal2-toast-column .swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast{flex-direction:row;align-items:center;width:auto;padding:.625em;overflow-y:hidden;box-shadow:0 0 .625em #d9d9d9}.swal2-popup.swal2-toast .swal2-header{flex-direction:row}.swal2-popup.swal2-toast .swal2-title{flex-grow:1;justify-content:flex-start;margin:0 .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{position:static;width:.8em;height:.8em;line-height:.8}.swal2-popup.swal2-toast .swal2-content{justify-content:flex-start;font-size:1em}.swal2-popup.swal2-toast .swal2-icon{width:2em;min-width:2em;height:2em;margin:0}.swal2-popup.swal2-toast .swal2-icon::before{display:flex;align-items:center;font-size:2em;font-weight:700}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-popup.swal2-toast .swal2-icon::before{font-size:.25em}}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{flex-basis:auto!important;height:auto;margin:0 .3125em}.swal2-popup.swal2-toast .swal2-styled{margin:0 .3125em;padding:.3125em .625em;font-size:1em}.swal2-popup.swal2-toast .swal2-styled:focus{box-shadow:0 0 0 .0625em #fff,0 0 0 .125em rgba(50,100,150,.4)}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:2em 2em;transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;-webkit-transform-origin:0 1.5em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-popup.swal2-toast .swal2-animate-success-icon .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-animate-success-icon .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}@-webkit-keyframes swal2-toast-show{0%{-webkit-transform:translateY(-.625em) rotateZ(2deg);transform:translateY(-.625em) rotateZ(2deg)}33%{-webkit-transform:translateY(0) rotateZ(-2deg);transform:translateY(0) rotateZ(-2deg)}66%{-webkit-transform:translateY(.3125em) rotateZ(2deg);transform:translateY(.3125em) rotateZ(2deg)}100%{-webkit-transform:translateY(0) rotateZ(0);transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{-webkit-transform:translateY(-.625em) rotateZ(2deg);transform:translateY(-.625em) rotateZ(2deg)}33%{-webkit-transform:translateY(0) rotateZ(-2deg);transform:translateY(0) rotateZ(-2deg)}66%{-webkit-transform:translateY(.3125em) rotateZ(2deg);transform:translateY(.3125em) rotateZ(2deg)}100%{-webkit-transform:translateY(0) rotateZ(0);transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{-webkit-transform:rotateZ(1deg);transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{-webkit-transform:rotateZ(1deg);transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-shown{top:auto;right:auto;bottom:auto;left:auto;max-width:calc(100% - .625em * 2);background-color:transparent}body.swal2-no-backdrop .swal2-shown>.swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}body.swal2-no-backdrop .swal2-shown.swal2-top{top:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-no-backdrop .swal2-shown.swal2-top-left,body.swal2-no-backdrop .swal2-shown.swal2-top-start{top:0;left:0}body.swal2-no-backdrop .swal2-shown.swal2-top-end,body.swal2-no-backdrop .swal2-shown.swal2-top-right{top:0;right:0}body.swal2-no-backdrop .swal2-shown.swal2-center{top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}body.swal2-no-backdrop .swal2-shown.swal2-center-left,body.swal2-no-backdrop .swal2-shown.swal2-center-start{top:50%;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-no-backdrop .swal2-shown.swal2-center-end,body.swal2-no-backdrop .swal2-shown.swal2-center-right{top:50%;right:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}body.swal2-no-backdrop .swal2-shown.swal2-bottom{bottom:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}body.swal2-no-backdrop .swal2-shown.swal2-bottom-left,body.swal2-no-backdrop .swal2-shown.swal2-bottom-start{bottom:0;left:0}body.swal2-no-backdrop .swal2-shown.swal2-bottom-end,body.swal2-no-backdrop .swal2-shown.swal2-bottom-right{right:0;bottom:0}.swal2-container{display:flex;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;flex-direction:row;align-items:center;justify-content:center;padding:.625em;overflow-x:hidden;background-color:transparent;-webkit-overflow-scrolling:touch}.swal2-container.swal2-top{align-items:flex-start}.swal2-container.swal2-top-left,.swal2-container.swal2-top-start{align-items:flex-start;justify-content:flex-start}.swal2-container.swal2-top-end,.swal2-container.swal2-top-right{align-items:flex-start;justify-content:flex-end}.swal2-container.swal2-center{align-items:center}.swal2-container.swal2-center-left,.swal2-container.swal2-center-start{align-items:center;justify-content:flex-start}.swal2-container.swal2-center-end,.swal2-container.swal2-center-right{align-items:center;justify-content:flex-end}.swal2-container.swal2-bottom{align-items:flex-end}.swal2-container.swal2-bottom-left,.swal2-container.swal2-bottom-start{align-items:flex-end;justify-content:flex-start}.swal2-container.swal2-bottom-end,.swal2-container.swal2-bottom-right{align-items:flex-end;justify-content:flex-end}.swal2-container.swal2-bottom-end>:first-child,.swal2-container.swal2-bottom-left>:first-child,.swal2-container.swal2-bottom-right>:first-child,.swal2-container.swal2-bottom-start>:first-child,.swal2-container.swal2-bottom>:first-child{margin-top:auto}.swal2-container.swal2-grow-fullscreen>.swal2-modal{display:flex!important;flex:1;align-self:stretch;justify-content:center}.swal2-container.swal2-grow-row>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container.swal2-grow-column{flex:1;flex-direction:column}.swal2-container.swal2-grow-column.swal2-bottom,.swal2-container.swal2-grow-column.swal2-center,.swal2-container.swal2-grow-column.swal2-top{align-items:center}.swal2-container.swal2-grow-column.swal2-bottom-left,.swal2-container.swal2-grow-column.swal2-bottom-start,.swal2-container.swal2-grow-column.swal2-center-left,.swal2-container.swal2-grow-column.swal2-center-start,.swal2-container.swal2-grow-column.swal2-top-left,.swal2-container.swal2-grow-column.swal2-top-start{align-items:flex-start}.swal2-container.swal2-grow-column.swal2-bottom-end,.swal2-container.swal2-grow-column.swal2-bottom-right,.swal2-container.swal2-grow-column.swal2-center-end,.swal2-container.swal2-grow-column.swal2-center-right,.swal2-container.swal2-grow-column.swal2-top-end,.swal2-container.swal2-grow-column.swal2-top-right{align-items:flex-end}.swal2-container.swal2-grow-column>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container:not(.swal2-top):not(.swal2-top-start):not(.swal2-top-end):not(.swal2-top-left):not(.swal2-top-right):not(.swal2-center-start):not(.swal2-center-end):not(.swal2-center-left):not(.swal2-center-right):not(.swal2-bottom):not(.swal2-bottom-start):not(.swal2-bottom-end):not(.swal2-bottom-left):not(.swal2-bottom-right):not(.swal2-grow-fullscreen)>.swal2-modal{margin:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-container .swal2-modal{margin:0!important}}.swal2-container.swal2-fade{transition:background-color .1s}.swal2-container.swal2-shown{background-color:rgba(0,0,0,.4)}.swal2-popup{display:none;position:relative;box-sizing:border-box;flex-direction:column;justify-content:center;width:32em;max-width:100%;padding:1.25em;border:none;border-radius:.3125em;background:#fff;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-header{display:flex;flex-direction:column;align-items:center}.swal2-title{position:relative;max-width:100%;margin:0 0 .4em;padding:0;color:#595959;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{z-index:1;flex-wrap:wrap;align-items:center;justify-content:center;width:100%;margin:1.25em auto 0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-actions.swal2-loading .swal2-styled.swal2-confirm{box-sizing:border-box;width:2.5em;height:2.5em;margin:.46875em;padding:0;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border:.25em solid transparent;border-radius:100%;border-color:transparent;background-color:transparent!important;color:transparent;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-actions.swal2-loading .swal2-styled.swal2-cancel{margin-right:30px;margin-left:30px}.swal2-actions.swal2-loading :not(.swal2-styled).swal2-confirm::after{content:"";display:inline-block;width:15px;height:15px;margin-left:5px;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border:3px solid #999;border-radius:50%;border-right-color:transparent;box-shadow:1px 1px 1px #fff}.swal2-styled{margin:.3125em;padding:.625em 2em;box-shadow:none;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#3085d6;color:#fff;font-size:1.0625em}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#aaa;color:#fff;font-size:1.0625em}.swal2-styled:focus{outline:0;box-shadow:0 0 0 2px #fff,0 0 0 4px rgba(50,100,150,.4)}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1.25em 0 0;padding:1em 0 0;border-top:1px solid #eee;color:#545454;font-size:1em}.swal2-image{max-width:100%;margin:1.25em auto}.swal2-close{position:absolute;top:0;right:0;justify-content:center;width:1.2em;height:1.2em;padding:0;overflow:hidden;transition:color .1s ease-out;border:none;border-radius:0;outline:initial;background:0 0;color:#ccc;font-family:serif;font-size:2.5em;line-height:1.2;cursor:pointer}.swal2-close:hover{-webkit-transform:none;transform:none;background:0 0;color:#f27474}.swal2-content{z-index:1;justify-content:center;margin:0;padding:0;color:#545454;font-size:1.125em;font-weight:300;line-height:normal;word-wrap:break-word}#swal2-content{text-align:center}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em auto}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:100%;transition:border-color .3s,box-shadow .3s;border:1px solid #d9d9d9;border-radius:.1875em;background:inherit;box-shadow:inset 0 1px 1px rgba(0,0,0,.06);color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:0 0 3px #c4e6f5}.swal2-file::-webkit-input-placeholder,.swal2-input::-webkit-input-placeholder,.swal2-textarea::-webkit-input-placeholder{color:#ccc}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::-ms-input-placeholder,.swal2-input::-ms-input-placeholder,.swal2-textarea::-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em auto;background:inherit}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-input[type=number]{max-width:10em}.swal2-file{background:inherit;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:inherit;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:inherit;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{margin:0 .4em}.swal2-validation-message{display:none;align-items:center;justify-content:center;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;zoom:normal;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}@supports (-ms-accelerator:true){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@-moz-document url-prefix(){.swal2-close:focus{outline:2px solid rgba(50,100,150,.4)}}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:1.25em auto 1.875em;zoom:normal;border:.25em solid transparent;border-radius:50%;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon::before{display:flex;align-items:center;height:92%;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning::before{content:"!"}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info::before{content:"i"}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question::before{content:"?"}.swal2-icon.swal2-question.swal2-arabic-question-mark::before{content:"Ø"}.swal2-icon.swal2-success{border-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:3.75em 3.75em;transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:0 3.75em;transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.875em;width:1.5625em;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal2-progress-steps{align-items:center;margin:0 0 1.25em;padding:0;background:inherit;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;width:2em;height:2em;border-radius:2em;background:#3085d6;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#3085d6}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;width:2.5em;height:.4em;margin:0 -1px;background:#3085d6}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-show.swal2-noanimation{-webkit-animation:none;animation:none}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-hide.swal2-noanimation{-webkit-animation:none;animation:none}.swal2-rtl .swal2-close{right:auto;left:0}.swal2-animate-success-icon .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-animate-success-icon .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-animate-success-icon .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-animate-error-icon{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-animate-error-icon .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}@-webkit-keyframes swal2-rotate-loading{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}')},function(t,e,n){"use strict";n.d(e,"a",function(){return o});
/*
 * This file is part of con4gis,
 * the gis-kit for Contao CMS.
 *
 * @package    con4gis
 * @version    6
 * @author     con4gis contributors (see "authors.txt")
 * @license    LGPL-3.0-or-later
 * @copyright  KÃ¼stenschmiede GmbH Software & Design
 * @link       https://www.con4gis.org
 */
var o={DUMMY_INPUT:"PLZ, Ort oder StraÃe eingeben...",HEADLINE_DIST:"Entfernung",HEADLINE_TIME:"Dauer",HEADLINE_BASE_PRICE:"Grundpreis",HEADLINE_DIST_PRICE:"Preis / km",HEADLINE_TIME_PRICE:"Preis / min",ERROR_OUT_OF_BOUNDS:"Adresse auÃerhalb des Tarifgebiets",ERROR_FALSE_ADDRESS:"Adresse nicht gefunden",ERROR:"Fehler",START_SEARCH:"Suche starten",NONE:""}},,function(t,e,n){"use strict";n.r(e);var o=n(0),a=n(2),r=n(1),s=n.n(r);
/**
 * con4gis - the gis-kit
 *
 * @package   con4gis
 * @author    con4gis contributors (see "authors.txt")
 * @license   GNU/LGPL http://opensource.org/licenses/lgpl-3.0.html
 * @copyright KÃ¼stenschmiede GmbH Software & Design 2011 - 2018
 * @link      https://www.kuestenschmiede.de
 */
class i{showErrorDialog(t,e){s.a.fire(t,e,"error")}showInfoDialog(t,e){s.a.fire(t,e,"info")}showConfirmDialog(t,e,n,o,a,r){s.a.fire({title:t,text:e,type:"warning",showCancelButton:!0,confirmButtonText:a||"Confirm",cancelButtonText:r||"Cancel",dangerMode:!0}).then(t=>{t.value?n():o()})}async showSelectDialog(t,e,n,o){const{value:a}=await s.a.fire({title:t,input:"select",inputOptions:e,inputPlaceholder:"Select a fruit",showCancelButton:!0,confirmButtonText:n,cancelButtonText:o});return a}async showRadioDialog(t,e,n,o){const{value:a}=await s.a.fire({title:t,input:"radio",inputOptions:e,showCancelButton:!0,confirmButtonText:n,cancelButtonText:o});return a}}const l=jQuery,c={};var u=[],d=[],m=[],w=[],p={routeFrom:{},routeTo:{}};function f(t){b(t,".route-from","routeFrom"),v()}function g(t){b(t,".route-to","routeTo"),v()}function h(t){var e,n,o;return e=parseInt(t,10),n=parseInt(e/60,10),e%=60,o=parseInt(n/60,10),n%=60,0===o&&0===n?e+"&nbsp;s":0===o?n+"&nbsp;min":o+"&nbsp;h&nbsp;"+n+"&nbsp;min"}function b(t,e,n){let o=t.coords;if(window.bBox&&window.bBox[0]&&!y(o.longitude,o.latitude))return;".route-from"===e?p.routeFrom.loc=[o.latitude,o.longitude]:p.routeTo.loc=[o.latitude,o.longitude];let a=window.proxyUrl+"/reverse.php?key="+window.keyReverse+"&format=json&lat="+o.latitude+"&lon="+o.longitude;l.ajax({url:a}).done(function(t){let o=function(t){let e="";t.address.pedestrian?(e+=t.address.pedestrian+" ",t.address.house_number&&(e+=t.address.house_number+", ")):t.address.path&&(e+=t.address.path+" ",t.address.house_number&&(e+=t.address.house_number));e.length>0&&(e+=", ");t.address.postcode&&(e+=t.address.postcode+" ");t.address.town&&(e+=t.address.town);return e}(t);l(e).val(o),p[n].adress=o})}function y(t,e){return window.bBox[0]<t&&t<window.bBox[2]&&window.bBox[1]<e&&e<window.bBox[3]}function v(){if(p.routeFrom.loc&&p.routeTo.loc){let t="con4gis/expenseService/"+window.settingId+"/"+p.routeFrom.loc[0]+","+p.routeFrom.loc[1]+";"+p.routeTo.loc[0]+","+p.routeTo.loc[1];l.ajax({url:t}).done(function(t){let e=l(".route-output");if("1"===window.displayGrid){if(e.css("display","grid"),l(".response-headline").remove(),l(".response-value").remove(),t.time){l(".response-time").html(h(t.time))}if(t.dist){let e=l(".response-dist"),n=t.dist+"",o=(n=n.replace(".",".")).indexOf(",")+3;e.html(n.substring(0,o+3)+" km")}let n=l(".headline-time"),o=l(".response-time"),a="auto auto ";for(let e in t.tariffs){let r=l(document.createElement("div"));r.html(e),r.addClass("response-headline"),r.addClass("grid-item"),r.insertAfter(n),n=r;let s=l(document.createElement("div")),i=t.tariffs[e]+"",c=(i=i.replace(".",",")).indexOf(",")+3;s.html(i.substring(0,c)+" â¬"),s.addClass("response-value"),s.addClass("grid-item"),s.insertAfter(o),o=s,a+="auto "}e.css("grid-template-columns",a)}else{if(e.css("display","block"),l(".response-headline").remove(),l(".response-value").remove(),t.time){l(".response-time").html(h(t.time))}if(t.dist){let e=l(".response-dist"),n=t.dist+"",o=(n=n.replace(".",".")).indexOf(",")+3;e.html(n.substring(0,o+3)+" km")}let n=l(".route-output-headline"),o=l(".route-output-values");for(let e in t.tariffs)if(t.tariffs.hasOwnProperty(e)){let a=document.createElement("th");a.innerHTML=e,l(a).addClass("response-headline");let r=document.createElement("td"),s=t.tariffs[e]+"",i=(s=s.replace(".",",")).indexOf(",")+3;r.innerHTML=s.substring(0,i)+" â¬",l(r).addClass("response-value"),n.append(a),o.append(r)}}})}}l(document).ready(function(){let t=window.serviceLang||window.navigator.userLanguage||window.navigator.language;"en"===t?l.extend(c,o.a):"de"===t?l.extend(c,a.a):l.extend(c,o.a),window.bBox=JSON.parse(window.bBox);let e=l(".route-from");e[0]&&(e[0].placeholder=c.DUMMY_INPUT);let n=l(".route-to");n[0]&&(n[0].placeholder=c.DUMMY_INPUT),l(".headline-dist").html(c.HEADLINE_DIST),l(".headline-time").html(c.HEADLINE_TIME);const r=function(t){const e=this;if(13===t.keyCode)!function(t,e){let n=window.proxyUrl+"search.php?format=json&key="+window.keyForward+"&q="+l(t).val();l.ajax({url:n}).done(function(t){let n=!1;t.length>0?(window.bBox&&window.bBox[0]&&(y(t[0].lon,t[0].lat)||(n=c.ERROR_OUT_OF_BOUNDS)),t[0]&&t[0].display_name&&!n&&(".route-to"===e?p.routeTo.loc=[t[0].lat,t[0].lon]:p.routeFrom.loc=[t[0].lat,t[0].lon],v())):n=c.ERROR_FALSE_ADDRESS,n&&(new i).showInfoDialog(c.ERROR,n)})}(e,"."+e.classList[0]);else if(8===t.keyCode||t.keyCode>=37&&t.keyCode<=40||9===t.keyCode);else{let t=Math.floor(Date.now());e.counter=t,setTimeout(function(){e.counter&&e.counter+1e3<Math.floor(Date.now())&&(delete e.counter,function(t,e){let n=window.proxyUrl+"search.php?format=json&key="+window.keyForward+"&q="+t;l.ajax({url:n}).done(function(t){if(t.length>0&&t[0]&&t[0].display_name){for(let n in t)if(t.hasOwnProperty(n)){if(window.bBox&&window.bBox[0]&&!y(t[n].lon,t[n].lat))continue;".route-from"===e?u.includes(t[n].display_name)||(u.push(t[n].display_name),d.push([t[n].lat,t[n].lon])):m.includes(t[n].display_name)||(m.push(t[n].display_name),w.push([t[n].lat,t[n].lon]))}let n=jQuery.Event("keydown",{keyCode:8});l(e).trigger(n)}})}(l(e).val(),"."+e.classList[0]))},1500)}};e.autocomplete({source:u}),e.on("keydown",r),e.on("autocompleteselect",function(t,e){let n=e.item.value;p.routeFrom.loc=d[u.findIndex(t=>t===n)],v()}),n.autocomplete({source:m}),n.on("keydown",r),n.on("autocompleteselect",function(t,e){let n=e.item.value;p.routeTo.loc=w[m.findIndex(t=>t===n)],v()}),e.on("change",function(){!function(t){p.routeFrom.adress=t}(l(this).val())}),n.on("change",function(){!function(t){p.routeTo.adress=t}(l(this).val())});let s=document.getElementById("btn-submit-expense-calc");s.innerText=c.START_SEARCH,l(s).on("click",function(){v()}),l(".route-from-geolocation").on("click",function(){navigator.geolocation?navigator.geolocation.getCurrentPosition(f):console.warn("The geolocation API is not available in your browser. Consider updating it or switching to a newer browser.")}),l(".route-to-geolocation").on("click",function(){navigator.geolocation?navigator.geolocation.getCurrentPosition(g):console.warn("The geolocation API is not available in your browser. Consider updating it or switching to a newer browser.")}),l(".headline-dist-price").html(c.HEADLINE_DIST_PRICE),l(".headline-time-price").html(c.HEADLINE_TIME_PRICE),l(".headline-base-price").html(c.HEADLINE_BASE_PRICE)})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,